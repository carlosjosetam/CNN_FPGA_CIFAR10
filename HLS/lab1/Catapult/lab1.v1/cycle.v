// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.62 Production Release
//  HLS Date:       Wed Nov 23 15:08:20 PST 2011
// 
//  Generated by:   xph3seiaba@cimeld20
//  Generated date: Fri Oct 24 14:18:53 2014
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    lab1_core
// ------------------------------------------------------------------


module lab1_core (
  clk, rst, a_rsc_mgc_in_wire_d, b_rsc_mgc_in_wire_d, c_rsc_mgc_out_stdreg_d
);
  input clk;
  input rst;
  input [255:0] a_rsc_mgc_in_wire_d;
  input [255:0] b_rsc_mgc_in_wire_d;
  output [255:0] c_rsc_mgc_out_stdreg_d;
  reg [255:0] c_rsc_mgc_out_stdreg_d;


  always begin : core
    // Interconnect Declarations
    reg [31:0] c_rsc_d_1_sg3_lpi_1;
    reg [31:0] c_rsc_d_1_sg4_lpi_1;
    reg [31:0] c_rsc_d_1_sg2_lpi_1;
    reg [31:0] c_rsc_d_1_sg5_lpi_1;
    reg [31:0] c_rsc_d_1_sg1_lpi_1;
    reg [31:0] c_rsc_d_1_sg6_lpi_1;
    reg [31:0] c_rsc_d_2_lpi_1;
    reg [31:0] c_rsc_d_1_sg7_lpi_1;
    reg [31:0] ACC_acc_4_cmx_sva;
    reg equal_tmp;
    reg equal_tmp_1;
    reg equal_tmp_2;
    reg equal_tmp_3;
    reg equal_tmp_4;
    reg equal_tmp_5;
    reg equal_tmp_6;
    reg [31:0] io_read_c_rsc_d_sdt_sg7_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg6_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg5_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg4_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg3_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg2_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_sg1_lpi_1_dfm;
    reg [31:0] io_read_c_rsc_d_sdt_2_lpi_1_dfm;
    reg [3:0] ACC_i_1_sva_1;
    reg [255:0] ACC_io_read_a_rsc_d_sdt;
    reg [255:0] ACC_io_read_b_rsc_d_sdt;
    reg [2:0] ACC_i_1_sva_2;

    reg[31:0] ACC_mux_8_nl;
    reg[31:0] ACC_mux_9_nl;
    begin : mainExit
      forever begin : main
        // C-Step 0 of Loop 'main'
        c_rsc_d_1_sg7_lpi_1 = io_read_c_rsc_d_sdt_sg7_lpi_1_dfm;
        c_rsc_d_2_lpi_1 = io_read_c_rsc_d_sdt_2_lpi_1_dfm;
        c_rsc_d_1_sg6_lpi_1 = io_read_c_rsc_d_sdt_sg6_lpi_1_dfm;
        c_rsc_d_1_sg1_lpi_1 = io_read_c_rsc_d_sdt_sg1_lpi_1_dfm;
        c_rsc_d_1_sg5_lpi_1 = io_read_c_rsc_d_sdt_sg5_lpi_1_dfm;
        c_rsc_d_1_sg2_lpi_1 = io_read_c_rsc_d_sdt_sg2_lpi_1_dfm;
        c_rsc_d_1_sg4_lpi_1 = io_read_c_rsc_d_sdt_sg4_lpi_1_dfm;
        c_rsc_d_1_sg3_lpi_1 = io_read_c_rsc_d_sdt_sg3_lpi_1_dfm;
        ACC_i_1_sva_2 = 3'b0;
        begin : waitLoop0Exit
          forever begin : waitLoop0
            @(posedge clk);
            if ( rst )
              disable mainExit;
            if ( clk )
              disable waitLoop0Exit;
          end
        end
        // C-Step 1 of Loop 'main'
        begin : ACCExit
          forever begin : ACC
            // C-Step 0 of Loop 'ACC'
            begin : waitLoop1Exit
              forever begin : waitLoop1
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop1Exit;
              end
            end
            // C-Step 1 of Loop 'ACC'
            ACC_io_read_a_rsc_d_sdt = a_rsc_mgc_in_wire_d;
            ACC_io_read_b_rsc_d_sdt = b_rsc_mgc_in_wire_d;
            ACC_mux_8_nl = MUX_v_32_8_2({(ACC_io_read_a_rsc_d_sdt[31:0]) , (ACC_io_read_a_rsc_d_sdt[63:32])
                , (ACC_io_read_a_rsc_d_sdt[95:64]) , (ACC_io_read_a_rsc_d_sdt[127:96])
                , (ACC_io_read_a_rsc_d_sdt[159:128]) , (ACC_io_read_a_rsc_d_sdt[191:160])
                , (ACC_io_read_a_rsc_d_sdt[223:192]) , (ACC_io_read_a_rsc_d_sdt[255:224])},
                ACC_i_1_sva_2);
            ACC_mux_9_nl = MUX_v_32_8_2({(ACC_io_read_b_rsc_d_sdt[31:0]) , (ACC_io_read_b_rsc_d_sdt[63:32])
                , (ACC_io_read_b_rsc_d_sdt[95:64]) , (ACC_io_read_b_rsc_d_sdt[127:96])
                , (ACC_io_read_b_rsc_d_sdt[159:128]) , (ACC_io_read_b_rsc_d_sdt[191:160])
                , (ACC_io_read_b_rsc_d_sdt[223:192]) , (ACC_io_read_b_rsc_d_sdt[255:224])},
                ACC_i_1_sva_2);
            ACC_acc_4_cmx_sva = (ACC_mux_8_nl) + (ACC_mux_9_nl);
            equal_tmp = (ACC_i_1_sva_2[0]) & (~((ACC_i_1_sva_2[2]) | (ACC_i_1_sva_2[1])));
            equal_tmp_1 = (ACC_i_1_sva_2[1]) & (~((ACC_i_1_sva_2[2]) | (ACC_i_1_sva_2[0])));
            equal_tmp_2 = (ACC_i_1_sva_2[1]) & (ACC_i_1_sva_2[0]) & (~ (ACC_i_1_sva_2[2]));
            equal_tmp_3 = (ACC_i_1_sva_2[2]) & (~((ACC_i_1_sva_2[1]) | (ACC_i_1_sva_2[0])));
            equal_tmp_4 = (ACC_i_1_sva_2[2]) & (ACC_i_1_sva_2[0]) & (~ (ACC_i_1_sva_2[1]));
            equal_tmp_5 = (ACC_i_1_sva_2[2]) & (ACC_i_1_sva_2[1]) & (~ (ACC_i_1_sva_2[0]));
            equal_tmp_6 = (ACC_i_1_sva_2[2]) & (ACC_i_1_sva_2[1]) & (ACC_i_1_sva_2[0]);
            io_read_c_rsc_d_sdt_sg7_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg7_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_6);
            io_read_c_rsc_d_sdt_sg6_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg6_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_5);
            io_read_c_rsc_d_sdt_sg5_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg5_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_4);
            io_read_c_rsc_d_sdt_sg4_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg4_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_3);
            io_read_c_rsc_d_sdt_sg3_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg3_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_2);
            io_read_c_rsc_d_sdt_sg2_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg2_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp_1);
            io_read_c_rsc_d_sdt_sg1_lpi_1_dfm = MUX_v_32_2_2({c_rsc_d_1_sg1_lpi_1
                , ACC_acc_4_cmx_sva}, equal_tmp);
            io_read_c_rsc_d_sdt_2_lpi_1_dfm = MUX_v_32_2_2({ACC_acc_4_cmx_sva , c_rsc_d_2_lpi_1},
                equal_tmp | equal_tmp_1 | equal_tmp_2 | equal_tmp_3 | equal_tmp_4
                | equal_tmp_5 | equal_tmp_6);
            c_rsc_mgc_out_stdreg_d <= {io_read_c_rsc_d_sdt_sg7_lpi_1_dfm , io_read_c_rsc_d_sdt_sg6_lpi_1_dfm
                , io_read_c_rsc_d_sdt_sg5_lpi_1_dfm , io_read_c_rsc_d_sdt_sg4_lpi_1_dfm
                , io_read_c_rsc_d_sdt_sg3_lpi_1_dfm , io_read_c_rsc_d_sdt_sg2_lpi_1_dfm
                , io_read_c_rsc_d_sdt_sg1_lpi_1_dfm , io_read_c_rsc_d_sdt_2_lpi_1_dfm};
            ACC_i_1_sva_1 = conv_u2u_3_4(ACC_i_1_sva_2) + 4'b1;
            begin : waitLoop2Exit
              forever begin : waitLoop2
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop2Exit;
              end
            end
            // C-Step 2 of Loop 'ACC'
            if ( ACC_i_1_sva_1[3] )
              disable ACCExit;
            ACC_i_1_sva_2 = ACC_i_1_sva_1[2:0];
            c_rsc_d_1_sg7_lpi_1 = io_read_c_rsc_d_sdt_sg7_lpi_1_dfm;
            c_rsc_d_1_sg6_lpi_1 = io_read_c_rsc_d_sdt_sg6_lpi_1_dfm;
            c_rsc_d_1_sg5_lpi_1 = io_read_c_rsc_d_sdt_sg5_lpi_1_dfm;
            c_rsc_d_1_sg4_lpi_1 = io_read_c_rsc_d_sdt_sg4_lpi_1_dfm;
            c_rsc_d_1_sg3_lpi_1 = io_read_c_rsc_d_sdt_sg3_lpi_1_dfm;
            c_rsc_d_1_sg2_lpi_1 = io_read_c_rsc_d_sdt_sg2_lpi_1_dfm;
            c_rsc_d_1_sg1_lpi_1 = io_read_c_rsc_d_sdt_sg1_lpi_1_dfm;
            c_rsc_d_2_lpi_1 = io_read_c_rsc_d_sdt_2_lpi_1_dfm;
          end
        end
      end
    end
    ACC_i_1_sva_2 = 3'b0;
    ACC_io_read_b_rsc_d_sdt = 256'b0;
    ACC_io_read_a_rsc_d_sdt = 256'b0;
    ACC_i_1_sva_1 = 4'b0;
    io_read_c_rsc_d_sdt_2_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg1_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg2_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg3_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg4_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg5_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg6_lpi_1_dfm = 32'b0;
    io_read_c_rsc_d_sdt_sg7_lpi_1_dfm = 32'b0;
    equal_tmp_6 = 1'b0;
    equal_tmp_5 = 1'b0;
    equal_tmp_4 = 1'b0;
    equal_tmp_3 = 1'b0;
    equal_tmp_2 = 1'b0;
    equal_tmp_1 = 1'b0;
    equal_tmp = 1'b0;
    ACC_acc_4_cmx_sva = 32'b0;
    c_rsc_d_1_sg7_lpi_1 = 32'b0;
    c_rsc_d_2_lpi_1 = 32'b0;
    c_rsc_d_1_sg6_lpi_1 = 32'b0;
    c_rsc_d_1_sg1_lpi_1 = 32'b0;
    c_rsc_d_1_sg5_lpi_1 = 32'b0;
    c_rsc_d_1_sg2_lpi_1 = 32'b0;
    c_rsc_d_1_sg4_lpi_1 = 32'b0;
    c_rsc_d_1_sg3_lpi_1 = 32'b0;
    c_rsc_mgc_out_stdreg_d <= 256'b0;
  end


  function [31:0] MUX_v_32_8_2;
    input [255:0] inputs;
    input [2:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = inputs[255:224];
      end
      3'b001 : begin
        result = inputs[223:192];
      end
      3'b010 : begin
        result = inputs[191:160];
      end
      3'b011 : begin
        result = inputs[159:128];
      end
      3'b100 : begin
        result = inputs[127:96];
      end
      3'b101 : begin
        result = inputs[95:64];
      end
      3'b110 : begin
        result = inputs[63:32];
      end
      3'b111 : begin
        result = inputs[31:0];
      end
      default : begin
        result = inputs[255:224];
      end
    endcase
    MUX_v_32_8_2 = result;
  end
  endfunction


  function [31:0] MUX_v_32_2_2;
    input [63:0] inputs;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[63:32];
      end
      1'b1 : begin
        result = inputs[31:0];
      end
      default : begin
        result = inputs[63:32];
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    lab1
//  Generated from file(s):
//    2) $PROJECT_HOME/lab1.cpp
// ------------------------------------------------------------------


module lab1 (
  a_rsc_z, b_rsc_z, c_rsc_z, clk, rst
);
  input [255:0] a_rsc_z;
  input [255:0] b_rsc_z;
  output [255:0] c_rsc_z;
  input clk;
  input rst;


  // Interconnect Declarations
  wire [255:0] a_rsc_mgc_in_wire_d;
  wire [255:0] b_rsc_mgc_in_wire_d;
  wire [255:0] c_rsc_mgc_out_stdreg_d;

  mgc_in_wire #(.rscid(1),
  .width(256)) a_rsc_mgc_in_wire (
      .d(a_rsc_mgc_in_wire_d),
      .z(a_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(256)) b_rsc_mgc_in_wire (
      .d(b_rsc_mgc_in_wire_d),
      .z(b_rsc_z)
    );
  mgc_out_stdreg #(.rscid(3),
  .width(256)) c_rsc_mgc_out_stdreg (
      .d(c_rsc_mgc_out_stdreg_d),
      .z(c_rsc_z)
    );
  lab1_core lab1_core_inst (
      .clk(clk),
      .rst(rst),
      .a_rsc_mgc_in_wire_d(a_rsc_mgc_in_wire_d),
      .b_rsc_mgc_in_wire_d(b_rsc_mgc_in_wire_d),
      .c_rsc_mgc_out_stdreg_d(c_rsc_mgc_out_stdreg_d)
    );
endmodule



