-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.62 Production Release
--  HLS Date:       Wed Nov 23 15:08:20 PST 2011
-- 
--  Generated by:   xph3seiaba@cimeld20
--  Generated date: Fri Oct 24 14:18:52 2014
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    lab1_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
  );
END lab1_core;

ARCHITECTURE v1 OF lab1_core IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  core : PROCESS
    -- Interconnect Declarations
    VARIABLE c_rsc_d_1_sg3_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg4_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg2_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg5_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg1_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg6_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_2_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE c_rsc_d_1_sg7_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE ACC_acc_4_cmx_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE equal_tmp : STD_LOGIC;
    VARIABLE equal_tmp_1 : STD_LOGIC;
    VARIABLE equal_tmp_2 : STD_LOGIC;
    VARIABLE equal_tmp_3 : STD_LOGIC;
    VARIABLE equal_tmp_4 : STD_LOGIC;
    VARIABLE equal_tmp_5 : STD_LOGIC;
    VARIABLE equal_tmp_6 : STD_LOGIC;
    VARIABLE io_read_c_rsc_d_sdt_sg7_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg6_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg5_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg4_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg3_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg2_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_sg1_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE io_read_c_rsc_d_sdt_2_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE ACC_i_1_sva_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
    VARIABLE ACC_io_read_a_rsc_d_sdt : STD_LOGIC_VECTOR (255 DOWNTO 0);
    VARIABLE ACC_io_read_b_rsc_d_sdt : STD_LOGIC_VECTOR (255 DOWNTO 0);
    VARIABLE ACC_i_1_sva_2 : STD_LOGIC_VECTOR (2 DOWNTO 0);

    VARIABLE ACC_mux_8_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE ACC_mux_9_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  BEGIN
    main : LOOP
      -- C-Step 0 of Loop 'main'
      c_rsc_d_1_sg7_lpi_1 := io_read_c_rsc_d_sdt_sg7_lpi_1_dfm;
      c_rsc_d_2_lpi_1 := io_read_c_rsc_d_sdt_2_lpi_1_dfm;
      c_rsc_d_1_sg6_lpi_1 := io_read_c_rsc_d_sdt_sg6_lpi_1_dfm;
      c_rsc_d_1_sg1_lpi_1 := io_read_c_rsc_d_sdt_sg1_lpi_1_dfm;
      c_rsc_d_1_sg5_lpi_1 := io_read_c_rsc_d_sdt_sg5_lpi_1_dfm;
      c_rsc_d_1_sg2_lpi_1 := io_read_c_rsc_d_sdt_sg2_lpi_1_dfm;
      c_rsc_d_1_sg4_lpi_1 := io_read_c_rsc_d_sdt_sg4_lpi_1_dfm;
      c_rsc_d_1_sg3_lpi_1 := io_read_c_rsc_d_sdt_sg3_lpi_1_dfm;
      ACC_i_1_sva_2 := STD_LOGIC_VECTOR'("000");
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 1 of Loop 'main'
      ACC : LOOP
        -- C-Step 0 of Loop 'ACC'
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 1 of Loop 'ACC'
        ACC_io_read_a_rsc_d_sdt := a_rsc_mgc_in_wire_d;
        ACC_io_read_b_rsc_d_sdt := b_rsc_mgc_in_wire_d;
        ACC_mux_8_nl := MUX_v_32_8_2((ACC_io_read_a_rsc_d_sdt(31 DOWNTO 0)) & (ACC_io_read_a_rsc_d_sdt(63
            DOWNTO 32)) & (ACC_io_read_a_rsc_d_sdt(95 DOWNTO 64)) & (ACC_io_read_a_rsc_d_sdt(127
            DOWNTO 96)) & (ACC_io_read_a_rsc_d_sdt(159 DOWNTO 128)) & (ACC_io_read_a_rsc_d_sdt(191
            DOWNTO 160)) & (ACC_io_read_a_rsc_d_sdt(223 DOWNTO 192)) & (ACC_io_read_a_rsc_d_sdt(255
            DOWNTO 224)), ACC_i_1_sva_2);
        ACC_mux_9_nl := MUX_v_32_8_2((ACC_io_read_b_rsc_d_sdt(31 DOWNTO 0)) & (ACC_io_read_b_rsc_d_sdt(63
            DOWNTO 32)) & (ACC_io_read_b_rsc_d_sdt(95 DOWNTO 64)) & (ACC_io_read_b_rsc_d_sdt(127
            DOWNTO 96)) & (ACC_io_read_b_rsc_d_sdt(159 DOWNTO 128)) & (ACC_io_read_b_rsc_d_sdt(191
            DOWNTO 160)) & (ACC_io_read_b_rsc_d_sdt(223 DOWNTO 192)) & (ACC_io_read_b_rsc_d_sdt(255
            DOWNTO 224)), ACC_i_1_sva_2);
        ACC_acc_4_cmx_sva := STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_mux_8_nl) +
            SIGNED(ACC_mux_9_nl), 32));
        equal_tmp := (ACC_i_1_sva_2(0)) AND (NOT((ACC_i_1_sva_2(2)) OR (ACC_i_1_sva_2(1))));
        equal_tmp_1 := (ACC_i_1_sva_2(1)) AND (NOT((ACC_i_1_sva_2(2)) OR (ACC_i_1_sva_2(0))));
        equal_tmp_2 := (ACC_i_1_sva_2(1)) AND (ACC_i_1_sva_2(0)) AND (NOT (ACC_i_1_sva_2(2)));
        equal_tmp_3 := (ACC_i_1_sva_2(2)) AND (NOT((ACC_i_1_sva_2(1)) OR (ACC_i_1_sva_2(0))));
        equal_tmp_4 := (ACC_i_1_sva_2(2)) AND (ACC_i_1_sva_2(0)) AND (NOT (ACC_i_1_sva_2(1)));
        equal_tmp_5 := (ACC_i_1_sva_2(2)) AND (ACC_i_1_sva_2(1)) AND (NOT (ACC_i_1_sva_2(0)));
        equal_tmp_6 := (ACC_i_1_sva_2(2)) AND (ACC_i_1_sva_2(1)) AND (ACC_i_1_sva_2(0));
        io_read_c_rsc_d_sdt_sg7_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg7_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_6);
        io_read_c_rsc_d_sdt_sg6_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg6_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_5);
        io_read_c_rsc_d_sdt_sg5_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg5_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_4);
        io_read_c_rsc_d_sdt_sg4_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg4_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_3);
        io_read_c_rsc_d_sdt_sg3_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg3_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_2);
        io_read_c_rsc_d_sdt_sg2_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg2_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp_1);
        io_read_c_rsc_d_sdt_sg1_lpi_1_dfm := MUX_v_32_2_2(c_rsc_d_1_sg1_lpi_1 & ACC_acc_4_cmx_sva,
            equal_tmp);
        io_read_c_rsc_d_sdt_2_lpi_1_dfm := MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_2_lpi_1,
            equal_tmp OR equal_tmp_1 OR equal_tmp_2 OR equal_tmp_3 OR equal_tmp_4
            OR equal_tmp_5 OR equal_tmp_6);
        c_rsc_mgc_out_stdreg_d <= io_read_c_rsc_d_sdt_sg7_lpi_1_dfm & io_read_c_rsc_d_sdt_sg6_lpi_1_dfm
            & io_read_c_rsc_d_sdt_sg5_lpi_1_dfm & io_read_c_rsc_d_sdt_sg4_lpi_1_dfm
            & io_read_c_rsc_d_sdt_sg3_lpi_1_dfm & io_read_c_rsc_d_sdt_sg2_lpi_1_dfm
            & io_read_c_rsc_d_sdt_sg1_lpi_1_dfm & io_read_c_rsc_d_sdt_2_lpi_1_dfm;
        ACC_i_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(ACC_i_1_sva_2),
            4) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 4), 4));
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 2 of Loop 'ACC'
        EXIT ACC WHEN ( (ACC_i_1_sva_1(3)) = '1' );
        ACC_i_1_sva_2 := ACC_i_1_sva_1(2 DOWNTO 0);
        c_rsc_d_1_sg7_lpi_1 := io_read_c_rsc_d_sdt_sg7_lpi_1_dfm;
        c_rsc_d_1_sg6_lpi_1 := io_read_c_rsc_d_sdt_sg6_lpi_1_dfm;
        c_rsc_d_1_sg5_lpi_1 := io_read_c_rsc_d_sdt_sg5_lpi_1_dfm;
        c_rsc_d_1_sg4_lpi_1 := io_read_c_rsc_d_sdt_sg4_lpi_1_dfm;
        c_rsc_d_1_sg3_lpi_1 := io_read_c_rsc_d_sdt_sg3_lpi_1_dfm;
        c_rsc_d_1_sg2_lpi_1 := io_read_c_rsc_d_sdt_sg2_lpi_1_dfm;
        c_rsc_d_1_sg1_lpi_1 := io_read_c_rsc_d_sdt_sg1_lpi_1_dfm;
        c_rsc_d_2_lpi_1 := io_read_c_rsc_d_sdt_2_lpi_1_dfm;
      END LOOP ACC;

    END LOOP main;

    ACC_i_1_sva_2 := STD_LOGIC_VECTOR'("000");
    ACC_io_read_b_rsc_d_sdt := STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    ACC_io_read_a_rsc_d_sdt := STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    ACC_i_1_sva_1 := STD_LOGIC_VECTOR'("0000");
    io_read_c_rsc_d_sdt_2_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg1_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg2_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg3_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg4_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg5_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg6_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    io_read_c_rsc_d_sdt_sg7_lpi_1_dfm := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    equal_tmp_6 := '0';
    equal_tmp_5 := '0';
    equal_tmp_4 := '0';
    equal_tmp_3 := '0';
    equal_tmp_2 := '0';
    equal_tmp_1 := '0';
    equal_tmp := '0';
    ACC_acc_4_cmx_sva := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg7_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_2_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg6_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg1_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg5_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg2_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg4_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_d_1_sg3_lpi_1 := STD_LOGIC_VECTOR'("00000000000000000000000000000000");
    c_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
  END PROCESS core;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    lab1
--  Generated from file(s):
--    2) $PROJECT_HOME/lab1.cpp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1 IS
  PORT(
    a_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_z : OUT STD_LOGIC_VECTOR (255 DOWNTO 0);
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC
  );
END lab1;

ARCHITECTURE v1 OF lab1 IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL a_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL a_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL b_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL c_rsc_mgc_out_stdreg_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  COMPONENT lab1_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL lab1_core_inst_a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  a_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 1,
      width => 256
      )
    PORT MAP(
      d => a_rsc_mgc_in_wire_d_1,
      z => a_rsc_mgc_in_wire_z
    );
  a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d_1;
  a_rsc_mgc_in_wire_z <= a_rsc_z;

  b_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 2,
      width => 256
      )
    PORT MAP(
      d => b_rsc_mgc_in_wire_d_1,
      z => b_rsc_mgc_in_wire_z
    );
  b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d_1;
  b_rsc_mgc_in_wire_z <= b_rsc_z;

  c_rsc_mgc_out_stdreg : mgc_hls.mgc_ioport_comps.mgc_out_stdreg
    GENERIC MAP(
      rscid => 3,
      width => 256
      )
    PORT MAP(
      d => c_rsc_mgc_out_stdreg_d_1,
      z => c_rsc_mgc_out_stdreg_z
    );
  c_rsc_mgc_out_stdreg_d_1 <= c_rsc_mgc_out_stdreg_d;
  c_rsc_z <= c_rsc_mgc_out_stdreg_z;

  lab1_core_inst : lab1_core
    PORT MAP(
      clk => clk,
      rst => rst,
      a_rsc_mgc_in_wire_d => lab1_core_inst_a_rsc_mgc_in_wire_d,
      b_rsc_mgc_in_wire_d => lab1_core_inst_b_rsc_mgc_in_wire_d,
      c_rsc_mgc_out_stdreg_d => lab1_core_inst_c_rsc_mgc_out_stdreg_d
    );
  lab1_core_inst_a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d;
  lab1_core_inst_b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d;
  c_rsc_mgc_out_stdreg_d <= lab1_core_inst_c_rsc_mgc_out_stdreg_d;

END v1;



