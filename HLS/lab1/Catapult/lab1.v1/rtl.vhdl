-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.62 Production Release
--  HLS Date:       Wed Nov 23 15:08:20 PST 2011
-- 
--  Generated by:   xph3seiaba@cimeld20
--  Generated date: Fri Oct 24 14:18:55 2014
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    lab1_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
    st_ACC_1_tr0 : IN STD_LOGIC
  );
END lab1_core_fsm;

ARCHITECTURE v1 OF lab1_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for lab1_core_fsm_1
  TYPE lab1_core_fsm_1_ST IS (st_main, st_ACC, st_ACC_1);

  SIGNAL state_var : lab1_core_fsm_1_ST;
  SIGNAL state_var_NS : lab1_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  lab1_core_fsm_1 : PROCESS (st_ACC_1_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN st_main =>
        fsm_output <= STD_LOGIC_VECTOR'("001");
        state_var_NS <= st_ACC;
      WHEN st_ACC =>
        fsm_output <= STD_LOGIC_VECTOR'("010");
        state_var_NS <= st_ACC_1;
      WHEN st_ACC_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("100");
        IF ( st_ACC_1_tr0 = '1' ) THEN
          state_var_NS <= st_main;
        ELSE
          state_var_NS <= st_ACC;
        END IF;
      WHEN OTHERS =>
        fsm_output <= "000";
        state_var_NS <= st_main;
    END CASE;
  END PROCESS lab1_core_fsm_1;

  lab1_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= st_main;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS lab1_core_fsm_1_REG;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    lab1_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
  );
END lab1_core;

ARCHITECTURE v1 OF lab1_core IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL c_rsc_mgc_out_stdreg_d_drv : STD_LOGIC_VECTOR (255 DOWNTO 0);

  -- Interconnect Declarations
  SIGNAL fsm_output : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL or_dcpl_46 : STD_LOGIC;
  SIGNAL or_dcpl_50 : STD_LOGIC;
  SIGNAL or_dcpl_54 : STD_LOGIC;
  SIGNAL c_rsc_d_1_sg3_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg4_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg2_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg5_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg1_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg6_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_2_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL c_rsc_d_1_sg7_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg7_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg6_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg5_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg4_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg3_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg2_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg1_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_2_lpi_1_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL ACC_i_1_sva_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL ACC_i_1_sva_2 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg7_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg6_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg5_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg4_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg3_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg2_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_sg1_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL io_read_c_rsc_d_sdt_2_lpi_1_dfm_mx0 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL ACC_acc_4_cmx_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);

  SIGNAL ACC_mux_8_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL ACC_mux_9_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  COMPONENT lab1_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
      st_ACC_1_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL lab1_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL lab1_core_fsm_inst_st_ACC_1_tr0 : STD_LOGIC;

BEGIN
  -- Default Constant Signal Assignments

  -- Output Reader Assignments
  c_rsc_mgc_out_stdreg_d <= c_rsc_mgc_out_stdreg_d_drv;

  lab1_core_fsm_inst : lab1_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => lab1_core_fsm_inst_fsm_output,
      st_ACC_1_tr0 => lab1_core_fsm_inst_st_ACC_1_tr0
    );
  fsm_output <= lab1_core_fsm_inst_fsm_output;
  lab1_core_fsm_inst_st_ACC_1_tr0 <= ACC_i_1_sva_1(3);

  io_read_c_rsc_d_sdt_sg7_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg7_lpi_1,
      or_dcpl_46 OR (NOT (ACC_i_1_sva_2(0))));
  io_read_c_rsc_d_sdt_sg6_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg6_lpi_1,
      or_dcpl_46 OR (ACC_i_1_sva_2(0)));
  io_read_c_rsc_d_sdt_sg5_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg5_lpi_1,
      or_dcpl_50 OR (NOT (ACC_i_1_sva_2(0))));
  io_read_c_rsc_d_sdt_sg4_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg4_lpi_1,
      or_dcpl_50 OR (ACC_i_1_sva_2(0)));
  io_read_c_rsc_d_sdt_sg3_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg3_lpi_1,
      or_dcpl_54 OR (NOT (ACC_i_1_sva_2(0))));
  io_read_c_rsc_d_sdt_sg2_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg2_lpi_1,
      or_dcpl_54 OR (ACC_i_1_sva_2(0)));
  io_read_c_rsc_d_sdt_sg1_lpi_1_dfm_mx0 <= MUX_v_32_2_2(ACC_acc_4_cmx_sva & c_rsc_d_1_sg1_lpi_1,
      (ACC_i_1_sva_2(2)) OR (ACC_i_1_sva_2(1)) OR (NOT (ACC_i_1_sva_2(0))));
  io_read_c_rsc_d_sdt_2_lpi_1_dfm_mx0 <= MUX_v_32_2_2(c_rsc_d_2_lpi_1 & ACC_acc_4_cmx_sva,
      NOT((ACC_i_1_sva_2(2)) OR (ACC_i_1_sva_2(1)) OR (ACC_i_1_sva_2(0))));
  ACC_mux_8_nl <= MUX_v_32_8_2((a_rsc_mgc_in_wire_d(31 DOWNTO 0)) & (a_rsc_mgc_in_wire_d(63
      DOWNTO 32)) & (a_rsc_mgc_in_wire_d(95 DOWNTO 64)) & (a_rsc_mgc_in_wire_d(127
      DOWNTO 96)) & (a_rsc_mgc_in_wire_d(159 DOWNTO 128)) & (a_rsc_mgc_in_wire_d(191
      DOWNTO 160)) & (a_rsc_mgc_in_wire_d(223 DOWNTO 192)) & (a_rsc_mgc_in_wire_d(255
      DOWNTO 224)), ACC_i_1_sva_2);
  ACC_mux_9_nl <= MUX_v_32_8_2((b_rsc_mgc_in_wire_d(31 DOWNTO 0)) & (b_rsc_mgc_in_wire_d(63
      DOWNTO 32)) & (b_rsc_mgc_in_wire_d(95 DOWNTO 64)) & (b_rsc_mgc_in_wire_d(127
      DOWNTO 96)) & (b_rsc_mgc_in_wire_d(159 DOWNTO 128)) & (b_rsc_mgc_in_wire_d(191
      DOWNTO 160)) & (b_rsc_mgc_in_wire_d(223 DOWNTO 192)) & (b_rsc_mgc_in_wire_d(255
      DOWNTO 224)), ACC_i_1_sva_2);
  ACC_acc_4_cmx_sva <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_mux_8_nl) + SIGNED(ACC_mux_9_nl),
      32));
  or_dcpl_46 <= NOT((ACC_i_1_sva_2(2)) AND (ACC_i_1_sva_2(1)));
  or_dcpl_50 <= (NOT (ACC_i_1_sva_2(2))) OR (ACC_i_1_sva_2(1));
  or_dcpl_54 <= (ACC_i_1_sva_2(2)) OR (NOT (ACC_i_1_sva_2(1)));
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        ACC_i_1_sva_2 <= STD_LOGIC_VECTOR'("000");
        c_rsc_d_2_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg1_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg2_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg3_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg4_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg5_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg6_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_d_1_sg7_lpi_1 <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        c_rsc_mgc_out_stdreg_d_drv <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        ACC_i_1_sva_1 <= STD_LOGIC_VECTOR'("0000");
        io_read_c_rsc_d_sdt_sg7_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg6_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg5_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg4_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg3_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg2_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_sg1_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
        io_read_c_rsc_d_sdt_2_lpi_1_dfm <= STD_LOGIC_VECTOR'("00000000000000000000000000000000");
      ELSE
        ACC_i_1_sva_2 <= (ACC_i_1_sva_1(2 DOWNTO 0)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(fsm_output(2),
            1),3));
        c_rsc_d_2_lpi_1 <= io_read_c_rsc_d_sdt_2_lpi_1_dfm;
        c_rsc_d_1_sg1_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg1_lpi_1 & io_read_c_rsc_d_sdt_sg1_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg2_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg2_lpi_1 & io_read_c_rsc_d_sdt_sg2_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg3_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg3_lpi_1 & io_read_c_rsc_d_sdt_sg3_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg4_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg4_lpi_1 & io_read_c_rsc_d_sdt_sg4_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg5_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg5_lpi_1 & io_read_c_rsc_d_sdt_sg5_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg6_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg6_lpi_1 & io_read_c_rsc_d_sdt_sg6_lpi_1_dfm,
            fsm_output(2));
        c_rsc_d_1_sg7_lpi_1 <= MUX_v_32_2_2(c_rsc_d_1_sg7_lpi_1 & io_read_c_rsc_d_sdt_sg7_lpi_1_dfm,
            fsm_output(2));
        c_rsc_mgc_out_stdreg_d_drv <= MUX_v_256_2_2(c_rsc_mgc_out_stdreg_d_drv &
            (io_read_c_rsc_d_sdt_sg7_lpi_1_dfm_mx0 & io_read_c_rsc_d_sdt_sg6_lpi_1_dfm_mx0
            & io_read_c_rsc_d_sdt_sg5_lpi_1_dfm_mx0 & io_read_c_rsc_d_sdt_sg4_lpi_1_dfm_mx0
            & io_read_c_rsc_d_sdt_sg3_lpi_1_dfm_mx0 & io_read_c_rsc_d_sdt_sg2_lpi_1_dfm_mx0
            & io_read_c_rsc_d_sdt_sg1_lpi_1_dfm_mx0 & io_read_c_rsc_d_sdt_2_lpi_1_dfm_mx0),
            fsm_output(1));
        ACC_i_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(ACC_i_1_sva_2),
            4) + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 4), 4));
        io_read_c_rsc_d_sdt_sg7_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg7_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg6_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg6_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg5_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg5_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg4_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg4_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg3_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg3_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg2_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg2_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_sg1_lpi_1_dfm <= io_read_c_rsc_d_sdt_sg1_lpi_1_dfm_mx0;
        io_read_c_rsc_d_sdt_2_lpi_1_dfm <= io_read_c_rsc_d_sdt_2_lpi_1_dfm_mx0;
      END IF;
    END IF;
  END PROCESS;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    lab1
--  Generated from file(s):
--    2) $PROJECT_HOME/lab1.cpp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1 IS
  PORT(
    a_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_z : OUT STD_LOGIC_VECTOR (255 DOWNTO 0);
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC
  );
END lab1;

ARCHITECTURE v1 OF lab1 IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL a_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL a_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL b_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL c_rsc_mgc_out_stdreg_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  COMPONENT lab1_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL lab1_core_inst_a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  a_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 1,
      width => 256
      )
    PORT MAP(
      d => a_rsc_mgc_in_wire_d_1,
      z => a_rsc_mgc_in_wire_z
    );
  a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d_1;
  a_rsc_mgc_in_wire_z <= a_rsc_z;

  b_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 2,
      width => 256
      )
    PORT MAP(
      d => b_rsc_mgc_in_wire_d_1,
      z => b_rsc_mgc_in_wire_z
    );
  b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d_1;
  b_rsc_mgc_in_wire_z <= b_rsc_z;

  c_rsc_mgc_out_stdreg : mgc_hls.mgc_ioport_comps.mgc_out_stdreg
    GENERIC MAP(
      rscid => 3,
      width => 256
      )
    PORT MAP(
      d => c_rsc_mgc_out_stdreg_d_1,
      z => c_rsc_mgc_out_stdreg_z
    );
  c_rsc_mgc_out_stdreg_d_1 <= c_rsc_mgc_out_stdreg_d;
  c_rsc_z <= c_rsc_mgc_out_stdreg_z;

  lab1_core_inst : lab1_core
    PORT MAP(
      clk => clk,
      rst => rst,
      a_rsc_mgc_in_wire_d => lab1_core_inst_a_rsc_mgc_in_wire_d,
      b_rsc_mgc_in_wire_d => lab1_core_inst_b_rsc_mgc_in_wire_d,
      c_rsc_mgc_out_stdreg_d => lab1_core_inst_c_rsc_mgc_out_stdreg_d
    );
  lab1_core_inst_a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d;
  lab1_core_inst_b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d;
  c_rsc_mgc_out_stdreg_d <= lab1_core_inst_c_rsc_mgc_out_stdreg_d;

END v1;



