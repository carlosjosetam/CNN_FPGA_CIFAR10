-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.62 Production Release
--  HLS Date:       Wed Nov 23 15:08:20 PST 2011
-- 
--  Generated by:   xph3seiaba@cimeld20
--  Generated date: Fri Oct 24 14:34:31 2014
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    lab1_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
  );
END lab1_core;

ARCHITECTURE v6 OF lab1_core IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  core : PROCESS
    -- Interconnect Declarations
    VARIABLE ACC_io_read_a_rsc_d_cse_sva : STD_LOGIC_VECTOR (255 DOWNTO 0);
    VARIABLE ACC_io_read_b_rsc_d_cse_sva : STD_LOGIC_VECTOR (255 DOWNTO 0);

  BEGIN
    main : LOOP
      -- C-Step 0 of Loop 'main'
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 1 of Loop 'main'
      ACC_io_read_a_rsc_d_cse_sva := a_rsc_mgc_in_wire_d;
      ACC_io_read_b_rsc_d_cse_sva := b_rsc_mgc_in_wire_d;
      c_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(255
          DOWNTO 224)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(255 DOWNTO 224)), 32))
          & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(223 DOWNTO
          192)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(223 DOWNTO 192)), 32)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(191
          DOWNTO 160)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(191 DOWNTO 160)), 32))
          & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(159 DOWNTO
          128)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(159 DOWNTO 128)), 32)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(127
          DOWNTO 96)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(127 DOWNTO 96)), 32))
          & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(95 DOWNTO
          64)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(95 DOWNTO 64)), 32)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(63
          DOWNTO 32)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(63 DOWNTO 32)), 32)) &
          STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(ACC_io_read_a_rsc_d_cse_sva(31 DOWNTO
          0)) + SIGNED(ACC_io_read_b_rsc_d_cse_sva(31 DOWNTO 0)), 32));
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 2 of Loop 'main'
    END LOOP main;

    ACC_io_read_b_rsc_d_cse_sva := STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    ACC_io_read_a_rsc_d_cse_sva := STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    c_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
  END PROCESS core;

END v6;

-- ------------------------------------------------------------------
--  Design Unit:    lab1
--  Generated from file(s):
--    2) $PROJECT_HOME/lab1.cpp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.lab1_mux_pkg.ALL;


ENTITY lab1 IS
  PORT(
    a_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    b_rsc_z : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
    c_rsc_z : OUT STD_LOGIC_VECTOR (255 DOWNTO 0);
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC
  );
END lab1;

ARCHITECTURE v6 OF lab1 IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL a_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL a_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL b_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL b_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  SIGNAL c_rsc_mgc_out_stdreg_d_1 : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL c_rsc_mgc_out_stdreg_z : STD_LOGIC_VECTOR (255 DOWNTO 0);

  COMPONENT lab1_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      a_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      b_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (255 DOWNTO 0);
      c_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (255 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL lab1_core_inst_a_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_b_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (255 DOWNTO 0);
  SIGNAL lab1_core_inst_c_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (255 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  a_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 1,
      width => 256
      )
    PORT MAP(
      d => a_rsc_mgc_in_wire_d_1,
      z => a_rsc_mgc_in_wire_z
    );
  a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d_1;
  a_rsc_mgc_in_wire_z <= a_rsc_z;

  b_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 2,
      width => 256
      )
    PORT MAP(
      d => b_rsc_mgc_in_wire_d_1,
      z => b_rsc_mgc_in_wire_z
    );
  b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d_1;
  b_rsc_mgc_in_wire_z <= b_rsc_z;

  c_rsc_mgc_out_stdreg : mgc_hls.mgc_ioport_comps.mgc_out_stdreg
    GENERIC MAP(
      rscid => 3,
      width => 256
      )
    PORT MAP(
      d => c_rsc_mgc_out_stdreg_d_1,
      z => c_rsc_mgc_out_stdreg_z
    );
  c_rsc_mgc_out_stdreg_d_1 <= c_rsc_mgc_out_stdreg_d;
  c_rsc_z <= c_rsc_mgc_out_stdreg_z;

  lab1_core_inst : lab1_core
    PORT MAP(
      clk => clk,
      rst => rst,
      a_rsc_mgc_in_wire_d => lab1_core_inst_a_rsc_mgc_in_wire_d,
      b_rsc_mgc_in_wire_d => lab1_core_inst_b_rsc_mgc_in_wire_d,
      c_rsc_mgc_out_stdreg_d => lab1_core_inst_c_rsc_mgc_out_stdreg_d
    );
  lab1_core_inst_a_rsc_mgc_in_wire_d <= a_rsc_mgc_in_wire_d;
  lab1_core_inst_b_rsc_mgc_in_wire_d <= b_rsc_mgc_in_wire_d;
  c_rsc_mgc_out_stdreg_d <= lab1_core_inst_c_rsc_mgc_out_stdreg_d;

END v6;



